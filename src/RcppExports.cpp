// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// S_01_GRC_cpp
List S_01_GRC_cpp(NumericVector H_vec, NumericMatrix partialH_mat, NumericVector gamma_vec, NumericMatrix X_mat, int m, IntegerVector IndexEnterRiskSet, IntegerVector IndexLeaveRiskSet);
RcppExport SEXP _NonLinearRC_S_01_GRC_cpp(SEXP H_vecSEXP, SEXP partialH_matSEXP, SEXP gamma_vecSEXP, SEXP X_matSEXP, SEXP mSEXP, SEXP IndexEnterRiskSetSEXP, SEXP IndexLeaveRiskSetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type H_vec(H_vecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type partialH_mat(partialH_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma_vec(gamma_vecSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_mat(X_matSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type IndexEnterRiskSet(IndexEnterRiskSetSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type IndexLeaveRiskSet(IndexLeaveRiskSetSEXP);
    rcpp_result_gen = Rcpp::wrap(S_01_GRC_cpp(H_vec, partialH_mat, gamma_vec, X_mat, m, IndexEnterRiskSet, IndexLeaveRiskSet));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NonLinearRC_S_01_GRC_cpp", (DL_FUNC) &_NonLinearRC_S_01_GRC_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_NonLinearRC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
