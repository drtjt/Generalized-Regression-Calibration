% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NL_RC.R
\name{NL_RC}
\alias{NL_RC}
\title{Nonlinear Regression Calibration Under a Cox Regression Model}
\usage{
NL_RC(
  df1,
  df2,
  df3,
  df1_ID_index = NA,
  df1_U_index,
  df1_delta_index,
  df1_Q_index,
  df1_X_index,
  df2_ID_index = NA,
  df2_Response_index,
  df2_Covariates_index,
  df3_ID_index = NA,
  Function_Type = "Polynomial",
  DF = 1,
  Method = "Cox",
  EstimateNuisance_Logi,
  mu_vec = NULL,
  Variance_vec = NULL,
  t_grid,
  z_grid,
  C = 1000,
  seed = 235346,
  x = 0,
  Spline_Z_vec = NULL,
  Boundary.knots = NULL,
  Estimate_CI_Surv = TRUE
)
}
\arguments{
\item{df1}{Data frame corresponding to the analysis cohort that contains right-censored observations of the event time.}

\item{df2}{Data frame corresponding to the calibration dataset.}

\item{df3}{Data frame corresponding to the replicate dataset. Note that \code{df3} needs to be in wide format.}

\item{df1_ID_index}{Column number for the identification variable in \code{df1}. If not specified (default), it is assumed that no units are shared between \code{df1} and \code{df2} / \code{df3}.}

\item{df1_U_index}{Column number for the right-censored event time in \code{df1}.}

\item{df1_delta_index}{Column number for the event time indicator in \code{df1}.}

\item{df1_Q_index}{Column number for the observed exposure variable in \code{df1}.}

\item{df1_X_index}{Column number(s) in \code{df1} for any additional covariates to include in the Cox model. Note that categorical variables need to be transformed to dummy variables.}

\item{df2_ID_index}{Column number for the identification variable in \code{df2}. If not specified (default), it is assumed that no units are shared between \code{df2} and \code{df1} / \code{df3}.}

\item{df2_Response_index}{Column number for the observed biomarker in \code{df2}.}

\item{df2_Covariates_index}{Column number(s) in \code{df2} for any additional covariates in the measurement error model. Note that categorical variables need to be transformed to dummy variables.}

\item{df3_ID_index}{Column number for the identification variable in \code{df3}. If not specified (default), it is assumed that no units are shared between \code{df3} and \code{df1} / \code{df2}.}

\item{Function_Type}{Specifies the functional form of the exposure's relationship with the hazard function. Users can select one of the following:
\itemize{
\item \code{"Polynomial"} - Degree \code{DF} polynomial (default).
\item \code{"Bernstein"} - Linear combination of \code{DF} Bernstein polynomial basis functions.
\item \code{"B-Spline"} - Linear combination of \code{DF} B-spline basis functions.
\item \code{"C-Spline"} - Linear combination of \code{DF} C-spline basis functions.
\item \code{"I-Spline"} - Linear combination of \code{DF} I-spline basis functions.
\item \code{"M-Spline"} - Linear combination of \code{DF} M-spline basis functions.
\item \code{"NC-Spline"} - Linear combination of \code{DF} natural cubic spline basis functions.
}}

\item{DF}{Degree of the polynomial or number of basis functions for splines (default is 1). Note that this parameter is irrelevent whenever \code{Method = "Linear"} or \code{Method = "Quadratic"}.}

\item{Method}{Specifies the estimation procedure. Users can select one of the following:}

\item{EstimateNuisance_Logi}{\itemize{
\item \code{"Cox"} - Estimate parameters in the Cox model that ignores measurement error (default).
\item \code{"Linear"} - Estimate parameters with regression calibration in a Cox model.
\item \code{"Quadratic"} - Estimate parameters with regression calibration with a quadratic exposure term included in a Cox model.
\item \code{"General_1"} - Estimate parameters with nonlinear regression calibration that applies a first-order Taylor series expansion to simplify the computations.
\item \code{"General_2"} - Estimate parameters with nonlinear regression calibration that applies a second-order Taylor series expansion to simplify the computations.
\item \code{"General_MC"} - Estimate parameters with nonlinear regression calibration that applies a Monte Carlo approximation.
}}

\item{mu_vec}{Vector corresponding to the conditional mean of the exposure variable given available data for each unit in \code{df1}. If provided, these values are used instead of estimating them (default in NULL).}

\item{Variance_vec}{Vector corresponding to the conditional variance of the exposure variable given available data for each unit in \code{df1}. If provided, these values are used instead of estimating them (default is NULL).}

\item{t_grid}{Vector of time points at which to estimate the conditional survival function.}

\item{z_grid}{Vector of exposure values at which to evaluate the conditional survival function.}

\item{C}{Number of Monte Carlo samples for estimating parameters and/or standard errors (default is 1000).}

\item{seed}{Random number seed (default is 235346).}

\item{x}{Value of covariates at which the conditional survival function is evaluated (default is 0).}

\item{Spline_Z_vec}{Vector of exposure values for generating spline basis functions (default is NULL).}

\item{Boundary.knots}{Boundary points for the spline basis functions (default is NULL).}

\item{Estimate_CI_Surv}{Logical indicator specifying whether a 95\% point-wise Monte Carlo confidence interval is computed (default is TRUE).}
}
\value{
A list containing
\itemize{
\item \code{Estimates} - Estimated parameters \eqn{(\beta', \gamma')'} from the specified Cox regression model.
\item \code{Nuisance_Estimates} - Estimated (nuisance) parameters \eqn{\theta} (see Thomson and Huang (2025+)), and measurement error variance.
\item \code{Variance} - Estimated covariance matrix of the estimated parameters, with the first block corresponding to the estimated covariance matrix for the estimated Cox regression parameters.
\item \code{Baseline_Hazard} - Data frame containing the estimated cumulative baseline hazard function at each observed uncensored event time.
\item \code{SurvProb_zgrid_list} - Estimated conditional survival function, with each element of the list corresponding to a fixed value from \code{z_grid} at times \code{t_grid}.
\item \code{SurvProb_zgrid_CI_list} - 95\% point-wise confidence interval of the conditional survival function for each value in \code{z_grid} at times \code{t_grid} (if requested).
\item \code{SurvProb_zgrid_Var_list} - Estimated variance of the conditional survival function for each value in \code{z_grid} at times \code{t_grid} (if requested).
}
}
\description{
Apply regression calibration to estimate parameters in a Cox regression model when the exposure variable is measured with error, and can have a linear or nonlinear effect on the hazard function.
}
\details{
The specified Cox regression model is
\deqn{\lambda(t;Z,X) = \lambda_0(t) \exp\{ g(Z; \beta) + \gamma'X \},} where \eqn{Z} denotes an exposure variable (scalar), \eqn{X} are additional covariates, and \eqn{g(Z;\beta)} is a known function of \eqn{Z} with parameter (vector) \eqn{\beta}. Users can specify the functional form of \eqn{g(Z;\beta)} with the \code{Function_Type} specification.

Rather than observing \eqn{Z}, the observed exposure \eqn{Q} follows a measurement error model subject to systematic bias influenced by subject-specific characteristics
\deqn{Q = a_0 + a_1 Z + a_2' V + \epsilon,} where \eqn{V = (X',R')'}, and \eqn{R} includes variables that influence the measurement error mechanism.

We additionally suppose that we observe a biomarker \eqn{W} that adheres to a classical measurement error model
\deqn{W = Z + e.}

Under the assumption that the event is "rare", the induced hazard model is
\deqn{\lambda(t;Q,V) = \lambda_0(t) \exp\{ \gamma' X \} H(\beta, Q, V; \theta),}
where \eqn{H(\beta, Q, V; \theta) = E_Z(\exp\{ g(Z;\beta) \} | Q, V)}, and \eqn{\theta} is a nuisance parameter vector related to \eqn{(a_0, a_1, a_2')'}.
\itemize{
\item When \eqn{g(Z;\beta) = \beta_1 Z} (\code{Function_Type = "Polynomial"}, \code{Method = "Linear"}), \eqn{H(\beta, Q, V; \theta) = \exp\{ \beta_1 E(Z | Q,V) + \beta_1^2 Var(Z | Q,V)/2 \}.}
\item When \eqn{g(Z;\beta) = \beta_1 Z + \beta_2 Z^2} (\code{Function_Type = "Polynomial"}, \code{Method = "Quadratic"}), \eqn{H(\beta, Q, V; \theta)} has a closed-form solution that leads to a procedure to estimate \eqn{\beta} and \eqn{\gamma} (see Huang and Prentice (2025)).
\item When \eqn{g(Z;\beta)} is a linear combination of spline basis functions or a polynomial of degree-3 (or higher), \eqn{H(\beta, Q, V; \theta)} has no analytical solution.
\itemize{
\item We allow users to approximate \eqn{H(\beta, Q, V; \theta)} with a Monte Carlo approximation (recommended) with the option \code{Method = "General_MC"} specification.
\item We allow users to approximate \eqn{H(\beta, Q, V; \theta)} with a first- or second-order Taylor series expansion around \eqn{E(Z | Q,V)} with the options \code{Method = "General_1"} and \code{Method = "General_2"}, respectively.
}
}
}
\note{
All of the source code that \code{NL_RC} uses can be found on GitHub: \url{https://github.com/drtjt/NonLinearRC}
}
\examples{
data(df_Analysis)
data(df_Biomarker)
data(df_Replicate)

# ----------------------------------------------------------------------
#        LINEAR REGRESSION CALIBRATION
# ----------------------------------------------------------------------

Results_Polynomial_LRC = NL_RC(df1 = df_Analysis,
                               df2 = df_Biomarker,
                               df3 = df_Replicate,
                               df1_ID_index = 1,
                               df1_U_index = 3,
                               df1_delta_index = 4,
                               df1_Q_index = 7,
                               df1_X_index = 5,
                               df2_ID_index = 1,
                               df2_Response_index = 2,
                               df2_Covariates_index = c(3,5),
                               df3_ID_index = 1,
                               Function_Type = "Polynomial",
                               DF = 1,
                               Method = "Linear",
                               EstimateNuisance_Logi = TRUE,
                               mu_vec = NULL,
                               Variance_vec = NULL,
                               t_grid = seq(0,20, length.out = 101),
                               z_grid = seq(-3, 3, length.out = 11),
                               C = 1000,
                               seed = 235346,
                               x = 0,
                               Spline_Z_vec = NULL,
                               Boundary.knots = NULL,
                               Estimate_CI_Surv = FALSE) # True beta: -0.2, True gamma: 0.1

# ----------------------------------------------------------------------
#         QUADRATIC REGRESSION CALIBRATION
# ----------------------------------------------------------------------

Results_Polynomial_QRC = NL_RC(df1 = df_Analysis,
                               df2 = df_Biomarker,
                               df3 = df_Replicate,
                               df1_ID_index = 1,
                               df1_U_index = 3,
                               df1_delta_index = 4,
                               df1_Q_index = 7,
                               df1_X_index = 5,
                               df2_ID_index = 1,
                               df2_Response_index = 2,
                               df2_Covariates_index = c(3,5),
                               df3_ID_index = 1,
                               Function_Type = "Polynomial",
                               DF = 2,
                               Method = "Quadratic",
                               EstimateNuisance_Logi = TRUE,
                               mu_vec = NULL,
                               Variance_vec = NULL,
                               t_grid = seq(0,20, length.out = 101),
                               z_grid = seq(-3, 3, length.out = 11),
                               C = 1000,
                               seed = 235346,
                               x = 0,
                               Spline_Z_vec = NULL,
                               Boundary.knots = NULL,
                               Estimate_CI_Surv = FALSE)

# ----------------------------------------------------------------------
#         CUBIC REGRESSION CALIBRATION
# ----------------------------------------------------------------------

Results_Polynomial_CRC = NL_RC(df1 = df_Analysis,
                               df2 = df_Biomarker,
                               df3 = df_Replicate,
                               df1_ID_index = 1,
                               df1_U_index = 3,
                               df1_delta_index = 4,
                               df1_Q_index = 7,
                               df1_X_index = 5,
                               df2_ID_index = 1,
                               df2_Response_index = 2,
                               df2_Covariates_index = c(3,5),
                               df3_ID_index = 1,
                               Function_Type = "Polynomial",
                               DF = 3,
                               Method = "General_MC",
                               EstimateNuisance_Logi = TRUE,
                               mu_vec = NULL,
                               Variance_vec = NULL,
                               t_grid = seq(0,20, length.out = 101),
                               z_grid = seq(-3, 3, length.out = 11),
                               C = 100,
                               seed = 235346,
                               x = 0,
                               Spline_Z_vec = NULL,
                               Boundary.knots = NULL,
                               Estimate_CI_Surv = FALSE) # Takes a few minutes
}
\references{
Thomson, T.J. and Huang Y. (2025+). Estimating Non-linear Exposure and Event Time Association in the Presence of Exposure Measurement Error. \emph{Submitted}

Huang, Y. and Prentice, R.L. (2025). Biomarker-assisted reporting in nutritional epidemiology addressing measurement error in exposure-disease associations. \emph{Biostatistics}. \strong{26}(1), kxaf014.
}
\author{
Trevor J. Thomson (\email{tthomson@fredhutch.org})
}
